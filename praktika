using System;
using System.Collections.Generic;

namespace praktika
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Для управления программой используются команды :");
            Console.WriteLine("<информация> - выводит на экран информацию о колонии, отдельных муровьях или особых насекомых");
            Console.WriteLine("<старт> - начинает следующий день");
            Console.WriteLine("<стоп> - прекращает работу программы");
            string comand;
            string col;
            string inf;
            int i = 0;
            List<Colony> colonies = new List<Colony>();
            colonies.Add(new Colony("чёрные", new Queen("Амалия", new int[] { 2, 4 }, new int[] { 3, 4 }, 1, 1, 0, 3, 1, 1)));
            colonies.Add(new Colony("красные", new Queen("Гвиндолина", new int[] { 2, 3 }, new int[] { 3, 4 }, 2, 2, 0, 2, 0, 2)));
            colonies.Add(new Colony("рыжие", new Queen("Евангелина", new int[] { 1, 3 }, new int[] { 1, 5 }, 3, 3, 0, 5, 2, 0)));
            int count = 3;
            Kucha[] kucha = new Kucha[] {new Kucha(new int[] { 100, 100, 100, 100 }), new Kucha(new int[] { 100, 100, 100, 100 }), new Kucha(new int[] { 100, 100, 100, 100 }), new Kucha(new int[] { 100, 100, 100, 100 }), new Kucha(new int[] { 100, 100, 100, 100 }) };
            for (int j = 0; j < count; j++)
            {
                for (int g = 0; g < 7; g++)
                {
                    if (colonies[j].queen.colony == 1)
                    {
                        colonies[j].worker.Add(new Worker("легендарный", 1, colonies[j].queen.num, new int[] { 1, 1, 2, 3 }, 3));
                    }
                    if (colonies[j].queen.colony == 2)
                    {
                        colonies[j].worker.Add(new Worker("старший", 2, colonies[j].queen.num, new int[] { 2, 1, 2, 1 }, 1));
                    }
                    if (colonies[j].queen.colony == 3)
                    {
                        colonies[j].worker.Add(new Worker("легендарный", 3, colonies[j].queen.num, new int[] { 1, 2, 2, 2 }, 3));
                    }
                }
                for (int g = 0; g < 7; g++)
                {
                    if (colonies[j].queen.colony == 1)
                    {
                        colonies[j].worker2.Add(new Worker("легендарный крепкий", 1, colonies[j].queen.num, new int[] { 2, 2, 2, 1 }, 3, 1, 1, 0));
                    }
                    if (colonies[j].queen.colony == 2)
                    {
                        colonies[j].worker2.Add(new Worker("легендарный бригадир", 2, colonies[j].queen.num, new int[] { 2, 2, 2, 1 }, 3));
                    }
                    if (colonies[j].queen.colony == 3)
                    {
                        colonies[j].worker2.Add(new Worker("старший бригадир", 3, colonies[j].queen.num, new int[] { 1, 2, 2, 1 }, 1));
                    }
                }
                for (int g = 0; g < 7; g++)
                {
                    if (colonies[j].queen.colony == 1)
                    {
                        colonies[j].warior.Add(new Warior(0, "обычный", 1, colonies[j].queen.num));
                    }
                    if (colonies[j].queen.colony == 2)
                    {
                        colonies[j].warior.Add(new Warior(0, "старший", 2, colonies[j].queen.num));
                    }
                    if (colonies[j].queen.colony == 3)
                    {
                        colonies[j].warior.Add(new Warior(0, "продвинутый", 3, colonies[j].queen.num, 2));
                    }
                }
                for (int g = 0; g < 7; g++)
                {
                    if (colonies[j].queen.colony == 1)
                    {
                        colonies[j].warior2.Add(new Warior(0, "продвинутый худой", 1, colonies[j].queen.num, 2, 1, 1, 0));
                    }
                    if (colonies[j].queen.colony == 2)
                    {
                        colonies[j].warior2.Add(new Warior(1, "обычный аномальный", 2, colonies[j].queen.num));
                    }
                    if (colonies[j].queen.colony == 3)
                    {
                        colonies[j].warior2.Add(new Warior(0, "старший сосредоточенный", 3, colonies[j].queen.num, 1, 1, 1, 1, 2));
                    }
                }
            }
            Colony a = colonies[0];
            a.unusual = new Unusual("скарабей","не может быть атакован войнами", 1, 1,1, new int[] { 3, 3, 3, 3 }, 5, 1, 0, 1);
            colonies[0] = a;
            a = colonies[1];
            a.unusual = new Unusual("термит", "не может быть атакован войнами", 1, 2,2, new int[] { 0, 1, 1, 1 }, 3, 1, 1, 3);
            colonies[1] = a;
            a = colonies[2];
            a.unusual = new Unusual("бабочка","не может быть атакован войнами\n урон всех воинов увеличен на 1", 1, 3,3, new int[] { 2, 1, 1, 2 }, 3, 1, 1, 3);
            colonies[2] = a;
            Random random = new Random();

            Console.WriteLine("________________________");
            Console.WriteLine();
            Console.WriteLine($"День {i}  (До засухи {10 - i} дней)");
            if (i < 8)
            {
                Console.WriteLine($"Действует эфект \"Шелкопряд\" , ещё {8 - i} дней ");
            }
            Console.WriteLine();
            foreach (Colony j in colonies)
            {
                Console.WriteLine($"Колония \"{j.name}\" :");
                Console.WriteLine($"---- Королева \"{j.queen.name}\"");
                Console.WriteLine($"---- Популяция : Воины - {j.warior.Count + j.warior2.Count} ; Рабочие - {j.worker.Count + j.worker2.Count} ; Особые - {(j.unusual != null ? j.unusual.life : 0)}");
                Console.WriteLine($"---- Ресурсы : в = {j.res[0]}, к = {j.res[1]}, л = {j.res[2]}, р = {j.res[3]}");
                Console.WriteLine();
            }
            for (int j = 0; j < 5; j++)
            {
                Console.WriteLine($"Куча {j + 1} : в = {kucha[j].res[0]}, к = {kucha[j].res[1]}, л = {kucha[j].res[2]}, р = {kucha[j].res[3]}");
            }

            Console.WriteLine("________________________");
            Console.WriteLine();

            i = 1;

            while (i < 10)
            {
                comand = Console.ReadLine();
                if (comand == "старт")
                {

                    for (int j = 0; j < count; j++)
                    {
                        
                        for (int c = 1; c < colonies[j].worker.Count; c++)
                        {
                            Worker n = colonies[j].worker[c];
                            kucha[random.Next(0, 5)].workers.Add(n);
                        }
                        for (int c = 1; c < colonies[j].worker2.Count; c++)
                        {
                            Worker n = colonies[j].worker2[c];
                            kucha[random.Next(0, 5)].workers.Add(n);
                        }
                        for (int c = 1; c < colonies[j].warior.Count; c++)
                        {
                            Warior n = colonies[j].warior[c];
                            kucha[random.Next(0, 5)].wariors.Add(n);
                        }
                        for (int c = 1; c < colonies[j].warior2.Count; c++)
                        {
                            Warior n = colonies[j].warior2[c];
                            kucha[random.Next(0, 5)].wariors.Add(n);
                        }
                        if (colonies[j].unusual.life != 0)
                        {
                            Unusual n = colonies[j].unusual;
                            kucha[random.Next(0, 5)].unusuals.Add(n);
                            
                        }
                    }

                    for (int k = 0; k < kucha.Length; k++)
                    {
                        for (int w = 0; w < kucha[k].wariors.Count-1; w++)
                        {
                            
                            int r = random.Next(0, 2);
                            if (kucha[k].workers.Count != 0)
                            {
                                if (r == 0)
                                {
                                    int ch = random.Next(0, kucha[k].workers.Count);
                                    if (kucha[k].wariors[w].colony == 3)
                                    {
                                        kucha[k].wariors[w].damage += 1;
                                        kucha[k].wariors[w].fight(kucha[k].workers[ch], null);
                                        kucha[k].wariors[w].damage -= 1;
                                    }
                                    if (kucha[k].wariors[w].colony != 3)
                                    {
                                        kucha[k].wariors[w].fight(kucha[k].workers[ch], null);
                                    }
                                    if (kucha[k].workers[ch].hp == 0)
                                    {
                                        kucha[k].workers[ch] = null;
                                        kucha[k].workers.RemoveAt(ch);
                                    }
                                }
                            }
                            if (kucha[k].wariors.Count != 0)
                            {
                                if (r == 1)
                                {
                                    int ch = random.Next(0, kucha[k].wariors.Count);
                                    if (kucha[k].wariors[w].colony == 3)
                                    {
                                        kucha[k].wariors[w].damage += 1;
                                        kucha[k].wariors[w].fight(null, kucha[k].wariors[ch]);
                                        kucha[k].wariors[w].damage -= 1;
                                    }
                                    if (kucha[k].wariors[w].colony != 3)
                                    {
                                        kucha[k].wariors[w].fight(null, kucha[k].wariors[ch]);
                                    }
                                    if (kucha[k].wariors[ch].hp == 0)
                                    {
                                        kucha[k].wariors[ch] = null;
                                        kucha[k].wariors.RemoveAt(ch);
                                    }
                                    if (kucha[k].wariors[w].hp == 0)
                                    {
                                        kucha[k].wariors[w] = null;
                                        kucha[k].wariors.RemoveAt(w);
                                    }
                                }
                            }
                        }
                        for (int w = 0; w < kucha[k].workers.Count; w++)
                        {
                            int safe = kucha[k].workers[w].count;
                            if (i < 8)
                            {
                                kucha[k].workers[w].count += 1;
                            }
                            res(colonies, kucha[k].workers[w], null, kucha[k], 0);
                            res(colonies, kucha[k].workers[w], null, kucha[k], 1);
                            res(colonies, kucha[k].workers[w], null, kucha[k], 2);
                            res(colonies, kucha[k].workers[w], null, kucha[k], 3);
                            kucha[k].workers[w].count = safe;
                        }
                        for (int u = 0; u < kucha[k].unusuals.Count; u ++)
                        {
                            int safe = kucha[k].unusuals[u].count;
                            res(colonies, null, kucha[k].unusuals[u], kucha[k], 0);
                            res(colonies, null, kucha[k].unusuals[u], kucha[k], 1);
                            res(colonies, null, kucha[k].unusuals[u], kucha[k], 2);
                            res(colonies, null, kucha[k].unusuals[u], kucha[k], 3);
                            kucha[k].unusuals[u].count = safe;

                            if (kucha[k].unusuals[u].hp != 0)
                            {
                                int r = random.Next(0, 3);
                                if (kucha[k].workers.Count != 0)
                                {
                                    if (r == 0)
                                    {
                                        int ch = random.Next(0, kucha[k].workers.Count);
                                        kucha[k].unusuals[u].fight(kucha[k].workers[ch], null, null);
                                        if (kucha[k].workers[ch].hp == 0)
                                        {
                                            kucha[k].workers[ch] = null;
                                            kucha[k].workers.RemoveAt(ch);
                                        }
                                    }
                                }
                                if (kucha[k].wariors.Count != 0)
                                {
                                    if (r == 1)
                                    {
                                        int ch = random.Next(0, kucha[k].wariors.Count);
                                        kucha[k].unusuals[u].fight(null, kucha[k].wariors[ch], null);
                                        if (kucha[k].wariors[ch].hp == 0)
                                        {
                                            kucha[k].wariors[ch] = null;
                                            kucha[k].wariors.RemoveAt(ch);
                                        }
                                        if (kucha[k].unusuals[u].hp == 0)
                                        {
                                            kucha[k].unusuals.RemoveAt(u);
                                        }
                                    }
                                }
                                if (kucha[k].unusuals.Count != 0)
                                {
                                    if (r == 2)
                                    {
                                        int ch = random.Next(0, kucha[k].unusuals.Count);
                                        kucha[k].unusuals[u].fight(null, null, kucha[k].unusuals[ch]);
                                        if (kucha[k].unusuals[ch].hp == 0)
                                        {
                                            kucha[k].unusuals.RemoveAt(ch);
                                        }
                                        if (kucha[k].unusuals[u].hp == 0)
                                        {
                                            kucha[k].unusuals.RemoveAt(u);
                                        }
                                    }
                                }

                            }
                        }
                    }

                    for (int j = 0; j < colonies.Count; j++)
                    {
                        for (int k = 1; k < colonies[j].worker.Count; k++)
                        {
                            if (colonies[j].worker[k].hp == 0)
                            {
                                colonies[j].worker.RemoveAt(k);
                            }
                        }
                        for (int k = 1; k < colonies[j].worker2.Count; k++)
                        {
                            if (colonies[j].worker2[k].hp == 0)
                            {
                                colonies[j].worker2.RemoveAt(k);
                            }
                        }
                        for (int k = 1; k < colonies[j].warior.Count; k++)
                        {
                            if (colonies[j].warior[k].hp == 0)
                            {
                                colonies[j].warior.RemoveAt(k);
                            }
                        }
                        for (int k = 1; k < colonies[j].warior2.Count; k++)
                        {
                            if (colonies[j].warior2[k].hp == 0)
                            {
                                colonies[j].warior2.RemoveAt(k);
                            }
                        }
                    }

                    reproduction(colonies, count);

                    Console.WriteLine($"День {i}  (До засухи {10 - i} дней)");
                    if (i < 8)
                    {
                        Console.WriteLine($"Действует эфект \"Шелкопряд\" , ещё {8 - i} дней ");
                    }
                    Console.WriteLine();
                    foreach (Colony j in colonies)
                    {
                        Console.WriteLine($"Колония \"{j.name}\" :");
                        Console.WriteLine($"---- Королева \"{j.queen.name}\"");
                        Console.WriteLine($"---- Популяция : Воины - {j.warior.Count + j.warior2.Count} ; Рабочие - {j.worker.Count + j.worker2.Count} ; Особые - {(j.unusual != null ? j.unusual.life : 0)}");
                        Console.WriteLine($"---- Ресурсы : в = {j.res[0]}, к = {j.res[1]}, л = {j.res[2]}, р = {j.res[3]}");
                        Console.WriteLine();
                    }
                    for (int j = 0; j < 5; j++)
                    {
                        Console.WriteLine($"Куча {j + 1} : в = {kucha[j].res[0]}, к = {kucha[j].res[1]}, л = {kucha[j].res[2]}, р = {kucha[j].res[3]}");
                    }

                    Console.WriteLine();
                    Console.WriteLine("________________________");
                    Console.WriteLine();
                }

                else if (comand == "информация")
                {
                    Console.WriteLine("Введите название колонии");
                    col = Console.ReadLine();
                    Console.WriteLine();
                    Console.WriteLine("Введите <колония> если хотите увидеть информацию о колонии, <рабочий> - о рабочем, <воин> - о воине, <особое> - об особом насекомом");
                    inf = Console.ReadLine();
                    Console.WriteLine();
                    if (inf == "колония")
                    {
                        foreach (Colony j in colonies)
                        {
                            if (j.name == col)
                            {
                                a = j;
                                Console.WriteLine($" Королева \"{j.queen.name}\"");
                                Console.WriteLine($" Общая популяция - {a.warior.Count + a.worker.Count + (j.unusual != null ? j.unusual.life : 0) + a.worker2.Count + a.warior2.Count}");
                                Console.WriteLine();
                                Console.WriteLine($" <<<<<<<<<<<<< Рабочие >>>>>>>>>>>>>");
                                Console.WriteLine();
                                Console.WriteLine($" Тип : {j.worker[0].type}");
                                Console.WriteLine($" ---- Количество : {j.worker.Count}");
                                Console.WriteLine();
                                Console.WriteLine($" Тип : {j.worker2[0].type}");
                                Console.WriteLine($" ---- Количество : {j.worker2.Count}");
                                Console.WriteLine();
                                Console.WriteLine($" <<<<<<<<<<<<< Воины >>>>>>>>>>>>>");
                                Console.WriteLine();
                                Console.WriteLine($" Тип : {j.warior[0].type}");
                                Console.WriteLine($" ---- Количество : {j.warior.Count}");
                                Console.WriteLine();
                                Console.WriteLine($" Тип : {j.warior2[0].type}");
                                Console.WriteLine($" ---- Количество : {j.warior2.Count}");
                                Console.WriteLine();
                                Console.WriteLine($" <<<<<<<<<<<<< Особое насекомое >>>>>>>>>>>>>");
                                Console.WriteLine();
                                if (j.unusual.life == 1 & j.unusual != null)
                                {
                                    Console.WriteLine($" Название : {j.unusual.name}");
                                    Console.WriteLine($" ---- Параметры : Здоровье = {j.unusual.hp}; Защита = {j.unusual.armor}; Атака = {j.unusual.damage}");
                                    Console.WriteLine($" ---- Бонусы : {j.unusual.bonus}");
                                }
                                else if (j.unusual.life == 0 | j.unusual != null)
                                {
                                    Console.WriteLine("В этой колонии нет особых насекомых");
                                }
                                Console.WriteLine();
                            }
                        }
                    }
                    if (inf == "рабочий")
                    {
                        foreach (Colony j in colonies)
                        {
                            if (j.name == col)
                            {
                                for (int w = 1; w < j.worker.Count; w++)
                                {
                                    Console.WriteLine($"Тип : {j.worker[w].type}");
                                    Console.WriteLine($"Параметры : Здоровье = {j.worker[w].hp}; Защита = {j.worker[w].armor}");
                                    Console.WriteLine($"Королева : {j.queen.name}");
                                    Console.WriteLine();
                                }
                                for (int w = 1; w < j.worker2.Count; w++)
                                {
                                    Console.WriteLine($"Тип : {j.worker2[w].type}");
                                    Console.WriteLine($"Параметры : Здоровье = {j.worker2[w].hp}; Защита = {j.worker2[w].armor}");
                                    Console.WriteLine($"Королева : {j.queen.name}");
                                    Console.WriteLine();
                                }
                            }
                        }
                    }
                    if (inf == "воин")
                    {
                        foreach (Colony j in colonies)
                        {
                            if (j.name == col)
                            {
                                for (int w = 1; w < j.warior.Count; w++)
                                {
                                    Console.WriteLine($" Тип : {j.warior[w].type}");
                                    Console.WriteLine($" Параметры : Здоровье = {j.warior[w].hp}; Защита = {j.warior[w].armor}; Атака = {j.warior[w].damage}");
                                    Console.WriteLine($"Королева : {j.queen.name}");
                                    Console.WriteLine();
                                }

                                for (int w = 1; w < j.warior2.Count; w++)
                                {
                                    Console.WriteLine($" Тип : {j.warior2[0].type}");
                                    Console.WriteLine($" Параметры : Здоровье = {j.warior2[0].hp}; Защита = {j.warior2[0].armor}; Атака = {j.warior2[0].damage}");
                                    Console.WriteLine($"Королева : {j.queen.name}");
                                    Console.WriteLine();
                                }
                                    
                            }
                        }
                    }
                    if (inf == "особое")
                    {
                        foreach (Colony j in colonies)
                        {
                            if (j.name == col)
                            {
                                if (j.unusual.life == 1 & j.unusual != null)
                                {
                                    Console.WriteLine($" Название : {j.unusual.name}");
                                    Console.WriteLine($" Параметры : Здоровье = {j.unusual.hp}; Защита = {j.unusual.armor}; Атака = {j.unusual.damage}");
                                    Console.WriteLine($" Бонусы : {j.unusual.bonus}");
                                }
                                else if (j.unusual.life == 0 | j.unusual != null)
                                {
                                    Console.WriteLine("В этой колонии нет особых насекомых");
                                }
                                Console.WriteLine();
                            }
                        }
                    }

                }

                else if (comand == "стоп")
                {
                    break;
                }

                else
                {
                    Console.WriteLine("Команда не распознана. Попробуйте ещё раз");
                }

                if (( kucha[0].res[0] + kucha[0].res[1] + kucha[0].res[2] + kucha[0].res[3] + kucha[1].res[0] + kucha[1].res[1] + kucha[1].res[2] + kucha[1].res[3] + kucha[2].res[0] + kucha[2].res[1] + kucha[2].res[2] + kucha[2].res[3] + kucha[3].res[0] + kucha[3].res[1] + kucha[3].res[2] + kucha[3].res[3] + kucha[4].res[0] + kucha[4].res[1] + kucha[4].res[2] + kucha[4].res[3] ) == 0)
                {
                    break;
                }
                i += 1;
            }
            int win = 0;
            string name = "";
            foreach (Colony j in colonies)
            {
                int sum = j.res[0] + j.res[1] + j.res[2] + j.res[3];
                if (win < sum)
                {
                    win = sum;
                    name = j.name;
                }
            }
            Console.WriteLine($"Победу одержали { name }");
        }

        class Ant
        {
            public int hp;
            public int armor;
            public int damage;
            public int colony;
            public int num;

            public Ant(int colony, int num, int hp = 1, int armor = 0, int damage = 0)
            {
                this.hp = hp;
                this.armor = armor;
                this.damage = damage;
                this.colony = colony;
                this.num = num;
            }
        }

        class Queen : Ant
        {
            public string name;
            public int[] cycle;
            public int[] kor;
            public int start;
            public int count;

            public Queen(string name, int[] cycle, int[] kor, int colony, int num, int start, int hp = 1, int armor = 0, int damage = 0) : base(colony, num, hp, armor, damage)
            {
                this.name = name;
                this.cycle = cycle;
                this.kor = kor;
                this.start = start;
                this.count = new Random().Next(this.cycle[0], this.cycle[1]);
            }

            public void timer()
            {
                if (this.count == 0)
                {
                    this.count = new Random().Next(this.cycle[0], this.cycle[1]);
                }

                if (this.count > 0)
                {
                    this.count -= 1;
                }
            }
        }

        class Worker : Ant
        {
            public string type;
            public int[] res;
            public int count;

            public Worker( string type, int colony, int num, int[] res, int count, int hp = 1, int armor = 0, int damage = 0) : base(colony, num, hp, armor, damage)
            {
                this.type = type;
                this.res = res;
                this.count = count;
            }
        }

        class Warior : Ant
        {
            public string type;
            public int attack_num;
            public int bad;
            public int target;

            public Warior(int bad,  string type, int colony, int num, int target = 1, int attack_num = 1, int hp = 1, int armor = 1, int damage = 1) : base(colony, num, hp, armor, damage)
            {
                this.type = type;
                this.attack_num = attack_num;
                this.bad = bad;
                this.target = target;
            }

            public void fight( Worker work, Warior war)
            {
                Worker worker = work;
                Warior warior = war;
                if (worker != null)
                {
                    if (worker.colony != this.colony)
                    {
                        worker.armor = worker.armor - this.damage;
                        if (worker.armor < 0)
                        {
                            worker.hp = worker.hp + worker.armor;
                            worker.armor = 0;
                        }
                    }
                }

                if (warior != null)
                {
                    if (warior.colony != this.colony)
                    {
                        warior.armor = warior.armor - this.damage;
                        if (warior.bad == 0)
                        {
                            this.armor = this.armor - warior.damage;
                        }
                        if (warior.armor < 0)
                        {
                            warior.hp = warior.hp + warior.armor;
                            warior.armor = 0;
                        }
                        if (this.armor < 0)
                        {
                            this.hp = this.hp + this.armor;
                            this.armor = 0;
                        }
                    }
                }
                
            }
        }

        class Unusual
        {
            public int hp;
            public int armor;
            public int damage;
            public int colony;
            public int num;
            public int life;
            public string name;
            public string bonus;
            public int count;
            public int[] res;

            public Unusual ( string name, string bonus, int life, int colony, int num, int[] res, int count, int hp = 1, int armor = 0, int damage = 0)
            {
                this.name = name;
                this.bonus = bonus;
                this.life = life;
                this.res = res;
                this.count = count;
                this.hp = hp;
                this.armor = armor;
                this.damage = damage;
                this.colony = colony;
                this.num = num;
            }

            public void fight(Worker worker, Warior warior, Unusual unusual)
            {
                if (worker != null)
                {
                    if (worker.colony != this.colony)
                    {
                        worker.armor = worker.armor - (this.damage);
                        if (worker.armor < 0)
                        {
                            worker.hp = worker.hp + worker.armor;
                            worker.armor = 0;
                        }
                    }
                }
                if (warior != null)
                {
                    if (warior.colony != this.colony)
                    {
                        warior.armor = warior.armor - (this.damage);
                        this.armor = this.armor - warior.damage;

                        if (warior.armor < 0)
                        {
                            warior.hp = warior.hp + warior.armor;
                            warior.armor = 0;
                        }
                        if (this.armor < 0)
                        {
                            this.hp = this.hp + this.armor;
                            this.armor = 0;
                        }
                    }
                }
                if (unusual != null)
                {
                    if (unusual.colony != this.colony)
                    {
                        unusual.armor = unusual.armor - (this.damage);
                        this.armor = this.armor - unusual.damage;

                        if (unusual.armor < 0)
                        {
                            unusual.hp = unusual.hp + unusual.armor;
                            unusual.armor = 0;
                        }
                        if (this.armor < 0)
                        {
                            this.hp = this.hp + this.armor;
                            this.armor = 0;
                        }
                    }
                }
            }
        }

        struct Colony
        {
            public string name;
            public int[] res;
            public Queen queen;
            public List<Worker> worker;
            public List<Warior> warior;
            public List<Worker> worker2;
            public List<Warior> warior2;
            public Unusual unusual;

            public Colony(string name, Queen queen) : this()
            {
                this.name = name;
                this.queen = queen;
                this.worker = new List<Worker>();
                this.worker2 = new List<Worker>();
                this.warior = new List<Warior>();
                this.warior2 = new List<Warior>();
                this.res = new int[] { 0,0,0,0 };
            }
        }

        static void reproduction(List<Colony> colonies, int count)
        {
            for (int j = 0; j < count; j++)
            {
                if (colonies[j].queen.count == 0)
                {
                    if (colonies[j].queen.start == 0)
                    {
                        Random random = new Random();
                        for (int g = 0; g < colonies[j].queen.kor[random.Next(0, 1)]; g++)
                        {
                            if (random.Next(1, 11) > 5)
                            {
                                Unusual b;
                                if (colonies[j].queen.colony == 1)
                                {
                                    colonies.Add(new Colony(create_name(random), new Queen(create_name(random), new int[] { 2, 4 }, new int[] { 3, 4 }, 1, count + 1, 1, 3, 1, 1)));
                                    b = colonies[count].unusual;
                                    b = new Unusual("", "", 0, 1, colonies[count].queen.num , new int[] { 0, 0, 0, 0 }, 0);
                                }
                                if (colonies[j].queen.colony == 2)
                                {
                                    colonies.Add(new Colony(create_name(random), new Queen(create_name(random), new int[] { 2, 3 }, new int[] { 3, 4 }, 2, count, 1, 2, 0, 2)));
                                    b = colonies[count].unusual;
                                    b = new Unusual("", "", 0, 2, colonies[count].queen.num, new int[] { 0, 0, 0, 0 }, 0);
                                }
                                if (colonies[j].queen.colony == 3)
                                {
                                    colonies.Add(new Colony(create_name(random), new Queen(create_name(random), new int[] { 1, 3 }, new int[] { 1, 5 }, 3, count, 1, 5, 2, 0)));
                                    b = colonies[count].unusual;
                                    b = new Unusual("", "", 0, 3, colonies[count].queen.num, new int[] { 0, 0, 0, 0 }, 0);
                                }
                                count += 1;
                            }
                        }
                    }
                    for (int g = 0; g < 7; g++)
                    {
                        if (colonies[j].queen.colony == 1)
                        {
                            colonies[j].worker.Add(new Worker("легендарный", 1, colonies[j].queen.num, new int[] { 1, 1, 2, 3 }, 3));
                        }
                        if (colonies[j].queen.colony == 2)
                        {
                            colonies[j].worker.Add(new Worker("старший", 2, colonies[j].queen.num, new int[] { 2, 1, 2, 1 }, 1));
                        }
                        if (colonies[j].queen.colony == 3)
                        {
                            colonies[j].worker.Add(new Worker("легендарный", 3, colonies[j].queen.num, new int[] { 1, 2, 2, 2 }, 3));
                        }
                    }
                    for (int g = 0; g < 7; g++)
                    {
                        if (colonies[j].queen.colony == 1)
                        {
                            colonies[j].worker2.Add(new Worker("легендарный крепкий", 1, colonies[j].queen.num, new int[] { 2, 2, 2, 1 }, 3, 1, 1, 0));
                        }
                        if (colonies[j].queen.colony == 2)
                        {
                            colonies[j].worker2.Add(new Worker("легендарный бригадир", 2, colonies[j].queen.num, new int[] { 2, 2, 2, 1 }, 3));
                        }
                        if (colonies[j].queen.colony == 3)
                        {
                            colonies[j].worker2.Add(new Worker("старший бригадир", 3, colonies[j].queen.num, new int[] { 1, 2, 2, 1 }, 1));
                        }
                    }
                    for (int g = 0; g < 7; g++)
                    {
                        if (colonies[j].queen.colony == 1)
                        {
                            colonies[j].warior.Add(new Warior(0, "обычный", 1, colonies[j].queen.num));
                        }
                        if (colonies[j].queen.colony == 2)
                        {
                            colonies[j].warior.Add(new Warior(0, "старший", 2, colonies[j].queen.num));
                        }
                        if (colonies[j].queen.colony == 3)
                        {
                            colonies[j].warior.Add(new Warior(0, "продвинутый", 3, colonies[j].queen.num, 2));
                        }
                    }
                    for (int g = 0; g < 7; g++)
                    {
                        if (colonies[j].queen.colony == 1)
                        {
                            colonies[j].warior2.Add(new Warior(0, "продвинутый худой", 1, colonies[j].queen.num, 2, 1, 1, 0));
                        }
                        if (colonies[j].queen.colony == 2)
                        {
                            colonies[j].warior2.Add(new Warior(1, "обычный аномальный", 2, colonies[j].queen.num));
                        }
                        if (colonies[j].queen.colony == 3)
                        {
                            colonies[j].warior2.Add(new Warior(0, "старший сосредоточенный", 3, colonies[j].queen.num, 1, 1, 1, 1, 2));
                        }
                    }
                }
                colonies[j].queen.timer();
            }
        }

        static string create_name(Random random)
        {
            string[] names = { "а", "б", "в", "г", "д", "е", "ё", "ж", "з", "и", "й", "к", "л", "м", "н", "о", "п", "р", "с", "т", "у", "ф", "х", "ц", "ч", "ш", "щ", "ъ", "ы", "ь", "э", "ю", "я" };
            string n = names[random.Next(0,32)];
            for (int s = 0; s < random.Next(1,15); s++)
            {
                n = n + names[random.Next(0, 32)];
            }
            return n;
        }

        struct Kucha
        {
            public List<Warior> wariors;
            public List<Worker> workers;
            public List<Unusual> unusuals;
            public int[] res;

            public Kucha(int[] res):this()
            {
                this.res = res;
                this.workers = new List<Worker>();
                this.wariors = new List<Warior>();
                this.unusuals = new List<Unusual>();
            }
        }

        static void res ( List<Colony> colony, Worker worker, Unusual unusual, Kucha kucha, int num)
        {
            if (worker != null)
            {
                if (kucha.res[num] >= worker.res[num])
                {
                    if (worker.count >= worker.res[num])
                    {
                        kucha.res[num] -= worker.res[num];
                        worker.count -= worker.res[num];
                        colony[worker.num - 1].res[num] += worker.res[num];
                    }
                    if (worker.count <= worker.res[num])
                    {
                        kucha.res[num] -= worker.res[num] - worker.count;
                        colony[worker.num - 1].res[num] += worker.res[num] - worker.count;
                        worker.count = 0;
                    }
                }
                if (kucha.res[num] <= worker.res[num])
                {
                    if (worker.count >= kucha.res[num])
                    {
                        worker.count -= kucha.res[num];
                        colony[worker.num - 1].res[num] += kucha.res[num];
                        kucha.res[num] = 0;
                    }
                    if (worker.count <= kucha.res[num])
                    {
                        kucha.res[num] -= worker.count;
                        colony[worker.num - 1].res[num] += kucha.res[num] - worker.count;
                        worker.count -= 0;
                    }
                }
            }
            if (unusual != null)
            {
                if (kucha.res[num] >= unusual.res[num])
                {
                    if (unusual.count >= unusual.res[num])
                    {
                        kucha.res[num] -= unusual.res[num];
                        unusual.count -= unusual.res[num];
                        for (int c = 0; c < colony.Count; c++)
                        {
                            if (colony[c].unusual != null)
                            {
                                if (colony[c].unusual.name == unusual.name)
                                {
                                    colony[c].res[num] += unusual.res[num];
                                }
                            }
                        }
                    }
                    if (unusual.count <= unusual.res[num])
                    {
                        kucha.res[num] -= unusual.res[num] - unusual.count;
                        for (int c = 0; c < colony.Count; c++)
                        {
                            if (colony[c].unusual != null)
                            {
                                if (colony[c].unusual.name == unusual.name)
                                {
                                    colony[c].res[num] += unusual.res[num] - unusual.count;
                                }
                            }
                        }
                        unusual.count = 0;
                    }
                }
                if (kucha.res[num] <= unusual.res[num])
                {
                    if (unusual.count >= kucha.res[num])
                    {
                        unusual.count -= kucha.res[num];
                        for (int c = 0; c < colony.Count; c++)
                        {
                            for (int l = 0; l < colony[c].worker.Count; l++)
                            {
                                if (colony[c].unusual != null)
                                {
                                    if (colony[c].unusual.name == unusual.name)
                                    {
                                        colony[c].res[num] += kucha.res[num];
                                    }
                                }
                            }
                        }
                        kucha.res[num] = 0;
                    }
                    if (unusual.count <= kucha.res[num])
                    {
                        kucha.res[num] -= unusual.count;
                        for (int c = 0; c < colony.Count; c++)
                        {
                            if (colony[c].unusual != null)
                            {
                                if (colony[c].unusual.name == unusual.name)
                                {
                                    colony[c].res[num] += kucha.res[num] - unusual.count;
                                }
                            }
                        }
                        unusual.count -= 0;
                    }
                }
            }
        }     
    }
}
